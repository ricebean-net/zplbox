package com.meixxi.html2zpl.service.zpl;

import org.apache.commons.codec.binary.Hex;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.junit.jupiter.MockitoExtension;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.InputStream;

import static org.junit.jupiter.api.Assertions.*;

@ExtendWith(MockitoExtension.class)
class ZplLabelServiceImplTest {

    @InjectMocks
    private ZplServiceImpl zplLabelService;

    @Test
    void createGrfBytes() throws Exception {

        // arrange
        BufferedImage img = ImageIO.read(ZplLabelServiceImplTest.class.getResourceAsStream("/com/meixxi/html2zpl/service/zpl/image-1-mono.png"));

        // act
        byte[] grfBytes = zplLabelService.createGrfBytes(img);

        // assert
        String expected = "fffffffffffff800000ffffffffffffffff8037fffffffffffffc0ffffffffff600000000043ffffdffffffff28002ffffffffffff40ffffffffffffc0000000ffffffffffffffffa00fffffffffffff40f7f779fffffc00000000efffffffffffffff7803ffffffffffff40f7b758ffffe000000007fffffffffffffeff7c01ffffffffffff40ffffffffff800000001bffffffffffffffffff00ffffffffffff40fffffffffe000000000ffffffffffffffffffff01fffffffffff40fffffffff80000000101ffffffeffffffffffff80fffffffffff40fffffffff8000000071fffdbfffffffffffffffe03ffffffffff40fffffffff000007f3f7fffcfffffffffffbfffff03ffffffffff40ffffffffe000007ffff3fffffffffffffffffdff807fffffffff40ffffffffc000207ffff7ffffffffffffffffffffe00fffffffff40ffffffff8000f67ffefffffffffffffffffffffff80fffffffff40fffffffe0001fe7ffffffffffffffffffffffffffc03ffffffff40fffffff80007ffffffffffffffffffffffffffffff00ffffffff40ffffffe0003ffffffffffffffffffffffffffffffe803fffffff40ffffff00007f7fffffffffffffffffffffffffffffc03fffffff40fffffc0000fffffffffffffffffffffffffffffffff03fffffff40fffffc00007ffffffffffffffffffffffffffffffff01fffffff40fffff00000fffffffffffffffffffffffffffffffff80fffffff40ffffe00001fffffffffffffffffffffffffffffffffe03ffffff40ffffe00003ffffffffffffff7cfffffffffffffffffe03ffffff40ffff80001ffffffffffffffffc1fffffffffffffffff00ffffff40fffe000035fffffffffffffffe07ffffffffffffffffc07fffff40fffe0000c9ffffffffffffffff81ffffffffffffffffe03fffff40fff80001c3ffffffffffffffffe07fffffffffffffffe00fffff40fff80003c7fffffffffffffffff00ffffffffffffffff00fffff40fff00001ff9ffffefffffffffff807fffffffffffffff007ffff40fff000009ffffffffffffffffff800f9fffffffffffff803ffff40ffe000003ffffffffffffffffffc003fffffffffffffff03ffff40ffc0000a3ffffffffffffef8ffff203f7fffffffffffff81ffff40ffc0000e3ffffffffffffffd707fd34f9fffffffffffffc1ffff40ff80003a1ffffffffffffffff87fd3ce07ffffffffffffe0ffff40ff80001e0ff9fffffffffffffc3fffce03ffffffffffffe0ffff40ff00007c2ff9fffffffffffffe3ffffff0fffffffffffff0ffff40be00007c3ff1fffffffffffffe0ffffff01ffffffffffff8ffff40f800001c3bf3fffff7f7ffffffbffffff801fffffffffffc7fff40b80000387f7fbfffffdffd7ffffffffffc01fffffffffffe7fff40b0000070fe7c3fffec88f87ffffffffffe003ffffffffffe3fff40a0000067ff783ffff8882171ffffffff3c200fffffffffff1fff40200003efff7c7ffff00001d9fffffffe1a0007ffffffffff1fff4000000fffff7ffffff000077fffffffff81c787ffffffffef87ff4000000ffffffffffffc0107ffffffffffc1efc7ffffffffff83ff40000007effffffffffec007fffffffffffffffff3ffffffffc3ff40000007efffff7ffffff007ffffffffffffffffffbfffffffc1ff40000003ffff7f7fff3ff81ffffffffffffffffffffffefff3e1ff40000003ffffdf7ffc0f041ffffffffffffffffffffdfefff9f0ff40000003ffff8fffe007007ffffffffffffffffffffc7ffff0f8ff40000001ffff87ff800000fffffffffffffffffffffe5ffa087c7f40000001ffffeffe000006ffffffffffffffffffff7fffff001c3f40000002fffffffe00000fffffffffffffffffffff7ff9fff85e3f40000003fffffffc00001fffffffffffffffffffff7efdfffffe1f40000027fffffff80000f7fffffffffffffffcfffffff9f3fcbf074000006cfffffff9e00071ffffffffffffffffffffff89f3fe0f03400000e0fffffff7f080707fffffffffff7fffffffff39fffc0f80400000f0ffffffeffdc0703fffffffffff97fffffffc08ce180d80400000405fffffeffde0701fffdfffffff8ffffffffe02600007800000007c0fffffbfff70e007ffff0fffff87ffffffff37eb080380000001fc0fffffbfff70c007fffe03ffffffffffffffffc08003c0000001fc3fffffbefffcc003fffe07fffffff75effffff800003e0000001ac3fff7f3fffff8001fffe047fffbff20efffffc000003e00000000fbffefe1fffff0000fffe00ffffffe01ffffbf8000003e00000038ffffef81fffffc0003ffe03fffffff8bfffe398300001e0000007dffffff007fffec0003ffe01fffffff9fef8fb00300003f0000007fffffbf806777ffc601ffe07ffffffffff3fce0010000ff0000007ff3ffdf0040f3ffce007df1fffffffffff3fcf8010301df8000007fffffef0000ffffec001cfffffffffe7ffee0ff083fe3ffc4000077fffdfe0001fffffc000e3ffffffffe7fffe1ff802083f9c00000053fe83800011ffff0000ffffffffffcffffe3fff80007ffc00000063f380c00003ffff00001ffffffffffffffe7ffdc0ed3ffc000009c1e3c0000023ffff02001fffffffffffffffffffc7ef3fc4000007fce3e0000023ffff80001fffffffffffffffffffc0c3df86000001ffc0f0000007ffff80001ffffffffffffffffeff0023cf00000003ffec7f00000fffff80007fffffffffffffffffff0021ce00000007f3fc3780003fffff0101ffffffffffffffffffff00b1fe00000003f9ffa300003fffff0319ffffffffffffffffffff8060fe00000003f9ffc000007f3fff019fffffffffffffffffffffe0e1ce0000000701ffc000007fe7ff00dffffffffffffffffffffff0f4060000007707f980000076f3ff005fffffffffffffffffffffff9fd7000000f307f208000061fffe007fffffffffffffffffffffff9fff0000017e03a030000062ffd8007fffffffffffffffffffffc7f5ff800000db81c020000060fefa0007ffffffffffffffffffffcff0ff800001ffc10040000021fff80003fffffffffffffffffffffff0ff000000fde00c00000061fffe0001fffffffffffffffffffffff8fe6000007de01e00000021fffe0001fffffffffffffffffffffff9fe730008fdcc7c00400000fffc0003fffffffe7ffffffffffffff3ffff0004ddfcf800400000fffe0003ffffffff7fffffffffffffe7ffff00027ffcf808c00000ffff8007fffffffffffffffffffffbfffffe00023ffff809800006ffff8007fffffffffffffffffffffbfffffe0007fffff019c00003ffff800fffffffffffe3fffffffffffffffe0007f7fff03b800003fff406fffffffffffff9ffffffffffffffff00003fffe05f980003fff00fffffffffffffffffffffffffffffff002effffe07f980003fffc0fffffffffffffffffffffffffffffff00047fffc07f8c0003fffe0fffffffffffffffffffffffffffffff000bffffa0bf860403ffff9ffffffffffffffffffffffffffffefa000549d2024fc04803ffff3fffffffffffffffffffffffffffdfff0059e3fe415fc00003ffffffffffffffffffffffffffffffffffff0003ffff8a2ff00017ffffffffffffffff9ffffffffc7fffffffff0000fd8a1007c00007ffffbffffffff7fbdffffffffc7fffff8d7a00001da0021c6f001fffffdfffffffffffffffffffff7fffff1fff80";

        assertNotNull(grfBytes, "ZPL Data is null");
        assertEquals(expected, Hex.encodeHexString(grfBytes), "Result is wrong.");
    }



    @Test
    void createLabel() throws Exception {

        // arrange
        InputStream is = ZplLabelServiceImplTest.class.getResourceAsStream("/com/meixxi/html2zpl/service/zpl/label-1-mono.png");
        BufferedImage img = ImageIO.read(is);

        // act
        String zplData = zplLabelService.createLabel(img);

        // assert
        assertNotNull(zplData, "Result is null.");
//        System.out.println(zplData);
    }

}